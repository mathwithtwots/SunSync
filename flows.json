[
    {
        "id": "d745b815d5e053c6",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "20d59925dbfc251d",
        "type": "mqtt-broker",
        "name": "Mosquitto",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "291e730313ce7709",
        "type": "ui_group",
        "name": "Default",
        "tab": "05d40efea2838295",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "05d40efea2838295",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7ea0e8ad88b23ae2",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "SunSync",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "0543694e5a5c64fd",
        "type": "mqtt in",
        "z": "d745b815d5e053c6",
        "name": "MQTT Subscribe",
        "topic": "sunsync",
        "qos": "2",
        "datatype": "utf8",
        "broker": "20d59925dbfc251d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 120,
        "wires": [
            [
                "c1ba810d39f9d717",
                "d921a1ca3395f6cf"
            ]
        ]
    },
    {
        "id": "c1ba810d39f9d717",
        "type": "file",
        "z": "d745b815d5e053c6",
        "name": "test",
        "filename": "C:\\Users\\matth\\OneDrive\\Desktop\\TheNEWJson",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 550,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4a30062f5e637f14",
        "type": "ui_chart",
        "z": "d745b815d5e053c6",
        "name": "",
        "group": "291e730313ce7709",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Voltage",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "45",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 540,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "61c31a6e1ef5a599",
        "type": "debug",
        "z": "d745b815d5e053c6",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 480,
        "wires": []
    },
    {
        "id": "e72857a775f6763b",
        "type": "ui_button",
        "z": "d745b815d5e053c6",
        "name": "",
        "group": "291e730313ce7709",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 440,
        "wires": [
            [
                "896359bf3f010318",
                "4a30062f5e637f14",
                "e49bd463e2eb162f"
            ]
        ]
    },
    {
        "id": "896359bf3f010318",
        "type": "ui_chart",
        "z": "d745b815d5e053c6",
        "name": "",
        "group": "291e730313ce7709",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 540,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "d921a1ca3395f6cf",
        "type": "split",
        "z": "d745b815d5e053c6",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "c1262abb5014903c",
                "ed6e6ff950b140b3",
                "57187fb0b65eb957"
            ]
        ]
    },
    {
        "id": "c1262abb5014903c",
        "type": "function",
        "z": "d745b815d5e053c6",
        "name": "Temperature data",
        "func": "// Node-RED Function Node\nvar inputString = msg.payload; // Assuming the input string is in msg.payload\n\n// Check if the input string contains the word \"Temperature\"\nif (inputString.includes(\"Temperature:\")) {\n    // Extract the data that follows \"Temperature\"\n   var outputString = inputString.slice(12);\n    // Set msg.payload to the extracted data\n    msg.payload = outputString;\n} else {\n    return;\n}\n\nreturn msg; // Always return the modified or original message object\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "e49bd463e2eb162f"
            ]
        ]
    },
    {
        "id": "57187fb0b65eb957",
        "type": "function",
        "z": "d745b815d5e053c6",
        "name": "Current data",
        "func": "// Node-RED Function Node\nvar inputString = msg.payload; // Assuming the input string is in msg.payload\n\n// Check if the input string contains the word \"Temperature\"\nif (inputString.includes(\"Current:\")) {\n    // Extract the data that follows \"Temperature\"\n   var outputString = inputString.slice(8);\n    // Set msg.payload to the extracted data\n    msg.payload = outputString;\n} else {\n    return;\n}\n\nreturn msg; // Always return the modified or original message object",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 380,
        "wires": [
            [
                "896359bf3f010318"
            ]
        ]
    },
    {
        "id": "ed6e6ff950b140b3",
        "type": "function",
        "z": "d745b815d5e053c6",
        "name": "Voltage data",
        "func": "// Node-RED Function Node\nvar inputString = msg.payload; // Assuming the input string is in msg.payload\n\n// Check if the input string contains the word \"Temperature\"\nif (inputString.includes(\"Voltage:\")) {\n    // Extract the data that follows \"Temperature\"\n   var outputString = inputString.slice(8);\n    // Set msg.payload to the extracted data\n    msg.payload = outputString;\n} else {\n    return;\n}\n\nreturn msg; // Always return the modified or original message object",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 300,
        "wires": [
            [
                "4a30062f5e637f14"
            ]
        ]
    },
    {
        "id": "e49bd463e2eb162f",
        "type": "ui_chart",
        "z": "d745b815d5e053c6",
        "name": "",
        "group": "291e730313ce7709",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 550,
        "y": 220,
        "wires": [
            []
        ]
    }
]